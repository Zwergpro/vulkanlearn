const c = @import("clibs.zig");


pub fn checkVk(result: c.vk.Result) !void {
    return switch (result) {
        c.vk.SUCCESS => {},
        c.vk.NOT_READY => error.vk_not_ready,
        c.vk.TIMEOUT => error.vk_timeout,
        c.vk.EVENT_SET => error.vk_event_set,
        c.vk.EVENT_RESET => error.vk_event_reset,
        c.vk.INCOMPLETE => error.vk_incomplete,
        c.vk.ERROR_OUT_OF_HOST_MEMORY => error.vk_error_out_of_host_memory,
        c.vk.ERROR_OUT_OF_DEVICE_MEMORY => error.vk_error_out_of_device_memory,
        c.vk.ERROR_INITIALIZATION_FAILED => error.vk_error_initialization_failed,
        c.vk.ERROR_DEVICE_LOST => error.vk_error_device_lost,
        c.vk.ERROR_MEMORY_MAP_FAILED => error.vk_error_memory_map_failed,
        c.vk.ERROR_LAYER_NOT_PRESENT => error.vk_error_layer_not_present,
        c.vk.ERROR_EXTENSION_NOT_PRESENT => error.vk_error_extension_not_present,
        c.vk.ERROR_FEATURE_NOT_PRESENT => error.vk_error_feature_not_present,
        c.vk.ERROR_INCOMPATIBLE_DRIVER => error.vk_error_incompatible_driver,
        c.vk.ERROR_TOO_MANY_OBJECTS => error.vk_error_too_many_objects,
        c.vk.ERROR_FORMAT_NOT_SUPPORTED => error.vk_error_format_not_supported,
        c.vk.ERROR_FRAGMENTED_POOL => error.vk_error_fragmented_pool,
        c.vk.ERROR_UNKNOWN => error.vk_error_unknown,
        c.vk.ERROR_OUT_OF_POOL_MEMORY => error.vk_error_out_of_pool_memory,
        c.vk.ERROR_INVALID_EXTERNAL_HANDLE => error.vk_error_invalid_external_handle,
        c.vk.ERROR_FRAGMENTATION => error.vk_error_fragmentation,
        c.vk.ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS => error.vk_error_invalid_opaque_capture_address,
        c.vk.PIPELINE_COMPILE_REQUIRED => error.vk_pipeline_compile_required,
        c.vk.ERROR_SURFACE_LOST_KHR => error.vk_error_surface_lost_khr,
        c.vk.ERROR_NATIVE_WINDOW_IN_USE_KHR => error.vk_error_native_window_in_use_khr,
        c.vk.SUBOPTIMAL_KHR => error.vk_suboptimal_khr,
        c.vk.ERROR_OUT_OF_DATE_KHR => error.vk_error_out_of_date_khr,
        c.vk.ERROR_INCOMPATIBLE_DISPLAY_KHR => error.vk_error_incompatible_display_khr,
        c.vk.ERROR_VALIDATION_FAILED_EXT => error.vk_error_validation_failed_ext,
        c.vk.ERROR_INVALID_SHADER_NV => error.vk_error_invalid_shader_nv,
        c.vk.ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR => error.vk_error_image_usage_not_supported_khr,
        c.vk.ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR => error.vk_error_video_picture_layout_not_supported_khr,
        c.vk.ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR => error.vk_error_video_profile_operation_not_supported_khr,
        c.vk.ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR => error.vk_error_video_profile_format_not_supported_khr,
        c.vk.ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR => error.vk_error_video_profile_codec_not_supported_khr,
        c.vk.ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR => error.vk_error_video_std_version_not_supported_khr,
        c.vk.ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT => error.vk_error_invalid_drm_format_modifier_plane_layout_ext,
        c.vk.ERROR_NOT_PERMITTED_KHR => error.vk_error_not_permitted_khr,
        c.vk.ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT => error.vk_error_full_screen_exclusive_mode_lost_ext,
        c.vk.THREAD_IDLE_KHR => error.vk_thread_idle_khr,
        c.vk.THREAD_DONE_KHR => error.vk_thread_done_khr,
        c.vk.OPERATION_DEFERRED_KHR => error.vk_operation_deferred_khr,
        c.vk.OPERATION_NOT_DEFERRED_KHR => error.vk_operation_not_deferred_khr,
        c.vk.ERROR_COMPRESSION_EXHAUSTED_EXT => error.vk_error_compression_exhausted_ext,
        c.vk.ERROR_INCOMPATIBLE_SHADER_BINARY_EXT => error.vk_error_incompatible_shader_binary_ext,
        else => error.vk_errror_unknown,
    };
}
